pipeline {
environment {
      imagename = "ahlamsd/springboot-docker-jenkins1"
      registryCredential = 'docker-hub'
      dockerImage = ''
}
agent any
  stages {
     stage('Cloning Git') {
        steps {
        git([url: 'https://github.com/AhlamSd/demo-springboot-docker.git', branch: 'master', credentialsId: 'ahlamsd-github-user-token'])
     }
     } 
     
    // Building Docker images
    stage('Build Docker image') {
        steps{
           script {
             dockerImage = docker.build imagename
         }
           }
           }
           
    // Uploading Docker images into Docker Hub
    stage('Uploading Image') {
          steps {
              script { 
                   docker.withRegistry( '', registryCredential ) {
                   dockerImage.push("$BUILD_NUMBER")
                   dockerImage.push('latest')
               } 
                 }
                   } 
               }
               
     // Stopping Docker containers for cleaner Docker run
     stage('docker stop container') {
         steps {
            sh 'docker ps -f name=springboot-docker-jenkins1Container -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=springboot-docker-jenkins1Container -q | xargs -r docker container rm'
         }
       }
    
    
    // Running Docker container, make sure port 8181 is opened in 
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 8181:8181 --rm --name springboot-docker-jenkins1Container")
         }
      }
    }       
               
           
             }
       } 
      
